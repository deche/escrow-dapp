{"ast":null,"code":"var _jsxFileName = \"/Users/deche/code/chainshot/solidity/escrow/src/App.js\";\nimport Escrow from './artifacts/src/contracts/Escrow.sol/Escrow';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\nasync function deploy(arbiter, beneficiary, value) {\n  await window.ethereum.request({\n    method: 'eth_requestAccounts'\n  });\n  const signer = provider.getSigner();\n  const factory = new ethers.ContractFactory(Escrow.abi, Escrow.bytecode, signer);\n  return factory.deploy(arbiter, beneficiary, {\n    value\n  });\n}\n\nasync function newContract() {\n  let arbiter = \"0x8B6796A1835937369B11956aBb268371A138026D\";\n  let beneficiary = \"0x6A5c4ceA696700C6e614941e9bBa165271098215\";\n  let value = \"300000000000000000\";\n  const contract = await deploy(arbiter, beneficiary, value);\n  console.log(contract);\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/deche/code/chainshot/solidity/escrow/src/App.js"],"names":["Escrow","ethers","provider","providers","Web3Provider","window","ethereum","deploy","arbiter","beneficiary","value","request","method","signer","getSigner","factory","ContractFactory","abi","bytecode","newContract","contract","console","log","App"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,6CAAnB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,WAAP;;AAEA,MAAMC,QAAQ,GAAG,IAAID,MAAM,CAACE,SAAP,CAAiBC,YAArB,CAAkCC,MAAM,CAACC,QAAzC,CAAjB;;AAEA,eAAeC,MAAf,CAAsBC,OAAtB,EAA+BC,WAA/B,EAA4CC,KAA5C,EAAmD;AACjD,QAAML,MAAM,CAACC,QAAP,CAAgBK,OAAhB,CAAwB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAxB,CAAN;AACA,QAAMC,MAAM,GAAGX,QAAQ,CAACY,SAAT,EAAf;AACA,QAAMC,OAAO,GAAG,IAAId,MAAM,CAACe,eAAX,CAA2BhB,MAAM,CAACiB,GAAlC,EAAuCjB,MAAM,CAACkB,QAA9C,EAAwDL,MAAxD,CAAhB;AACA,SAAOE,OAAO,CAACR,MAAR,CAAeC,OAAf,EAAwBC,WAAxB,EAAqC;AAAEC,IAAAA;AAAF,GAArC,CAAP;AACD;;AAED,eAAeS,WAAf,GAA6B;AAC3B,MAAIX,OAAO,GAAG,4CAAd;AACA,MAAIC,WAAW,GAAG,4CAAlB;AACA,MAAIC,KAAK,GAAG,oBAAZ;AACA,QAAMU,QAAQ,GAAG,MAAMb,MAAM,CAACC,OAAD,EAAUC,WAAV,EAAuBC,KAAvB,CAA7B;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD;;AAID,SAASG,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;KANQA,G;AAQT,eAAeA,GAAf","sourcesContent":["import Escrow from './artifacts/src/contracts/Escrow.sol/Escrow';\nimport {ethers} from 'ethers';\nimport './App.css';\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\nasync function deploy(arbiter, beneficiary, value) {\n  await window.ethereum.request({ method: 'eth_requestAccounts' });\n  const signer = provider.getSigner();\n  const factory = new ethers.ContractFactory(Escrow.abi, Escrow.bytecode, signer);\n  return factory.deploy(arbiter, beneficiary, { value });\n}\n\nasync function newContract() {\n  let arbiter = \"0x8B6796A1835937369B11956aBb268371A138026D\";\n  let beneficiary = \"0x6A5c4ceA696700C6e614941e9bBa165271098215\";\n  let value = \"300000000000000000\";\n  const contract = await deploy(arbiter, beneficiary, value);\n  console.log(contract);\n}\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      App\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}