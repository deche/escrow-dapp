{"ast":null,"code":"var _jsxFileName = \"/Users/deche/code/chainshot/solidity/escrow/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Escrow from './artifacts/src/contracts/Escrow.sol/Escrow';\nimport { ethers } from 'ethers';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\nprovider.send(\"eth_requestAccounts\", []);\n\nconst App = () => {\n  _s();\n\n  const [contracts, setContracts] = useState({});\n\n  async function deploy(arbiter, beneficiary, value) {\n    const accounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    }); //await provider.send(\"eth_requestAccounts\", []);\n\n    const signer = provider.getSigner();\n    console.log(\"Account:\", await signer.getAddress());\n    const factory = new ethers.ContractFactory(Escrow.abi, Escrow.bytecode, signer);\n    return factory.deploy(arbiter, beneficiary, {\n      value\n    });\n  }\n\n  async function newContract() {\n    if (typeof window.ethereum !== 'undefined') {\n      //let arbiter = \"0x7fbA8b9606674E026D1Ae4468AadB9aCEfD41ae2\";\n      let arbiter = \"0xEE344dcB087D1bfEc402B815E7Bb3BB686701500\"; //let beneficiary = \"0x8F6E16d717fb162C20aC6AC994cCbc44E6804EE9\";\n\n      let beneficiary = \"0xbC227F22124b12a5770D81B2a23e65d2c03f7d93\";\n      let value = ethers.BigNumber.from(\"110000000000000000\");\n      const contract = await deploy(arbiter, beneficiary, value);\n      console.log(contract);\n      contract.x_arbiter = arbiter;\n      contract.x_beneficiary = beneficiary; //setContracts(contracts => [...contracts, contract]);\n\n      const newContracts = [...contracts];\n    } else {\n      console.log('ethereum undefined');\n    }\n  }\n\n  async function approve(contract) {\n    const signer = provider.getSigner();\n    await contract.connect(signer).approve();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [\"App 1\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: newContract,\n        children: \"Set Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: contracts.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Address: \", c.address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }, this), \"arbiter: \", c.x_arbiter, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 35\n        }, this), \"beneficiary: \", c.x_beneficiary, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => approve(c),\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, \"{c.address}\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DaqzI6qAJPO6k5Go1KqEBpqgkV8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/deche/code/chainshot/solidity/escrow/src/App.js"],"names":["React","useState","Escrow","ethers","provider","providers","Web3Provider","window","ethereum","send","App","contracts","setContracts","deploy","arbiter","beneficiary","value","accounts","request","method","signer","getSigner","console","log","getAddress","factory","ContractFactory","abi","bytecode","newContract","BigNumber","from","contract","x_arbiter","x_beneficiary","newContracts","approve","connect","map","c","address"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Escrow from './artifacts/src/contracts/Escrow.sol/Escrow';\nimport {ethers} from 'ethers';\nimport './App.css';\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum, \"any\");\n\n provider.send(\"eth_requestAccounts\", []);\n\n\n const App = () =>  {\n\n\n  const [contracts, setContracts] = useState({});\n\n  async function deploy(arbiter, beneficiary, value) {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    //await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    console.log(\"Account:\", await signer.getAddress());\n    const factory = new ethers.ContractFactory(Escrow.abi, Escrow.bytecode, signer);\n    return factory.deploy(arbiter, beneficiary, { value });\n  }\n  \n  async function newContract() {\n    if (typeof window.ethereum !== 'undefined') {\n      //let arbiter = \"0x7fbA8b9606674E026D1Ae4468AadB9aCEfD41ae2\";\n      let arbiter = \"0xEE344dcB087D1bfEc402B815E7Bb3BB686701500\";\n      //let beneficiary = \"0x8F6E16d717fb162C20aC6AC994cCbc44E6804EE9\";\n      let beneficiary = \"0xbC227F22124b12a5770D81B2a23e65d2c03f7d93\";\n      let value = ethers.BigNumber.from(\"110000000000000000\");\n      const contract = await deploy(arbiter, beneficiary, value);\n      console.log(contract);\n      contract.x_arbiter = arbiter;\n      contract.x_beneficiary = beneficiary;\n      //setContracts(contracts => [...contracts, contract]);\n      const newContracts = [...contracts];\n    } else {\n      console.log('ethereum undefined');\n    }\n  \n  }\n\n  async function approve(contract) {\n    const signer = provider.getSigner();\n    await contract.connect(signer).approve();\n\n\n  } \n\n  return (\n    <div className=\"App\">\n      App 1 \n      <div>\n        <button onClick={newContract}>Set Greeting</button>\n      </div>\n\n      <div>\n        {contracts.map((c) => \n          <div key=\"{c.address}\">\n            Address: {c.address}<br />\n            arbiter: {c.x_arbiter}<br />\n            beneficiary: {c.x_beneficiary}\n\n            <button onClick={() => approve(c)}>Approve</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}